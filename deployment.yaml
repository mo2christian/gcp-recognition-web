apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: reko-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "ip"
    kubernetes.io/ingress.allow-http: "false"
spec:
  tls:
    - secretName: reko-tls
  rules:
  - host: detect.just2teach.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: detect-svc
          servicePort: 8081
  - host: translate.just2teach.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: translate-svc
          servicePort: 8081
  - host: reko.just2teach.com
    http:
      paths:
        - path: /*
          backend:
            serviceName: reko-svc
            servicePort: 8080
        - path: /static/*
          backend:
            serviceName: reko-svc
            servicePort: 8081

---
# kubectl create secret docker-registry auth-gcr --docker-username=_json_key  --docker-password="$(cat auth-gcr.json)" --docker-server=https://eu.gcr.io --docker-email=christian@example.com

# kubectl create secret generic auth-gcp --from-file=./reko.json

# kubectl create secret generic reko-oauth --from-literal=client_id=50295857426-9tm7d80a8vkqqbaq046t0ppu82004ujk.apps.googleusercontent.com --from-literal=client_secret=zla3ztCv_NFK1ssIKyJ0s04t

# kubectl create secret tls reko-tls --cert=ssl/certificate.crt --key=ssl/private.key

apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: reko-static
spec:
  cdn:
    enabled: true
    cachePolicy:
      includeHost: true
      includeProtocol: true
      includeQueryString: false
---

apiVersion: cloud.google.com/v1beta1
kind: BackendConfig
metadata:
  name: reko-iap
spec:
  iap:
    enabled: true
    oauthclientCredentials:
      secretName: reko-oauth
---

apiVersion: v1
kind: Service
metadata:
  name: reko-svc
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"8081":"reko-static", "8080":"reko-iap"}  }'
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 8081
    targetPort: 8080
    protocol: TCP
    name: static
  selector:
    app: reko-web
  type: NodePort

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reko-web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: reko-web
    spec:
      containers:
      - name: web
        image: eu.gcr.io/recognition-218419/recognition-web:APP_VERSION
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/etc/creds/reko.json"
        - name: DETECT_URL
          value: https://detect.just2teach.com/rest/do
        - name: TRANSLATE_URL
          value: https://translate.just2teach.com/do
        - name: BUCKET_NAME
          value: recognition-218419-reko
        - name: FOLDER
          value: images
        - name: API_KEY
          value: AIzaSyBVQ8bUuMVy-igtNFtkccTZQKTeyG0lUD4
        volumeMounts:
        - name: creds
          mountPath: "/etc/creds"
          readOnly: true
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz.action
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 10
      imagePullSecrets:
      - name: auth-gcr
      volumes:
        - name: creds
          secret:
            secretName: auth-gcp
